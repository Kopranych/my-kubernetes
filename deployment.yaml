apiVersion: apps/v1
kind: Deployment
metadata:
  name: first-deployment
  labels:
    app: local-test
spec:
  replicas: 2
  selector:
    matchLabels:
      app: local-test
  strategy:
    type: RollingUpdate # стратегия обновления подов поочередно
    rollingUpdate:
      maxSurge: 1 # на какое количество реплик можно добавлять при обновлении, можно задать в процентах, например 10%
      maxUnavailable: 1 # на какое количество реплик можно удалить реплику
  template:
    metadata:
      labels:
        app: local-test
    spec:
      containers:
      - image: nginx:1.13
        name: nginx
        env:
        - name: TEST
          value: foo
#        - name: TEST_1
#          valueFrom:
#            secretKeyRef:
#              name: test # значение берется из секрета с именем test и ключа с именем key
#              key: key
        ports:
        - containerPort: 80
        readinessProbe:
          failureThreshold: 3 # количество попыток для выполнения
          httpGet:
            path: /
            port: 80
          periodSeconds: 10
          successThreshold: 1 # хотя бы одна успешная проверка сбрасывает счетчик failureThreshold
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 80
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          initialDelaySeconds: 10 # количество секунд перед первой проверкой приложения
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /
            port: 80
          periodSeconds: 10 # failureThreshold * periodSeconds = количество секунд которое будет ждать для выполнения пробы
        resources: # QoS Class: Burstable (limits != request), BestEffort (not set), Guaranteed (limits == request), если придется освобождать ресурсы в первую очередь будут убиваться поды с BestEffort затем Burstable и Guaranteed в последнюю очередь
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m # 1 cpu == 1000m mili cpu
            memory: 100Mi
        volumeMounts: # что бы под смог замонтировать настройки configMap необходимо сначала запустить configMap
        - name: config
          mountPath: /etc/nginx/conf.d/
        - name: data
          mountPath: /data
      volumes:
      - name: config
        configMap:
          name: first-configmap
      - name: data
        persistentVolumeClaim:
          claimName: first-pvc


